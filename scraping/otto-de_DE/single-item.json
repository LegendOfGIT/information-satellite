{
  "site": "otto.de",

  "itemId": "{template.site}-{request.query.itemId}",

  "scraping": [
    {
      "comment": "site",
      "commandId": "set-context-value",
      "parameters": {
        "contextId": "site",
        "value": "otto-de_DE"
      }
    },
    {
      "comment": "link",
      "commandId": "set-context-value",
      "parameters": {
        "contextId": "link",
        "value": "https://{template.site}/p/{request.query.itemId}"
      }
    },
    {
      "comment": "single-product-view",
      "commandId": "visit-uri",
      "parameters": {
        "contextId": "single-product-view",
        "uri": "https://{template.site}/p/{request.query.itemId}"
      }
    },
    {
      "comment": "title",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "title",
        "sourceContextId": "single-product-view",
        "css-queries": [ ".pdp_variation-name" ]
      }
    },
    {
      "comment": "price-current",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "price-current",
        "sourceContextId": "single-product-view",
        "css-queries": [ ".pdp_price__retail-price .pl_headline300" ]
      }
    },
    {
      "comment": "price-initial",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "price-initial",
        "sourceContextId": "single-product-view",
        "css-queries": [ ".pdp_price__strike-through-price", ".pdp_price__retail-price", ".pdp_price__retail-price .pl_headline300" ]
      }
    },
    {
      "comment": "price-current to float",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "price-current",
        "sourceContextId": "price-current"
      }
    },
    {
      "comment": "price-initial to float",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "price-initial",
        "sourceContextId": "price-initial"
      }
    },

    {
      "comment": "weight in grams",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "weightInG",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "Gewicht:(.*)g<",
          ">Gewicht.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "weight in grams to float",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "weightInG",
        "sourceContextId": "weightInG"
      }
    },

    {
      "comment": "width-in-mm",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "width-in-mm",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "Breite:(.*)mm<\\/li>"
        ]
      }
    },
    {
      "comment": "width-in-mm to float",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "width-in-mm",
        "sourceContextId": "width-in-mm"
      }
    },

    {
      "comment": "diameter-in-cm",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "diameter-in-cm",
        "flags": "sg",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "Größe:(.*?)<\\/span>"
        ]
      }
    },
    {
      "comment": "diameter-in-cm to float",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "diameter-in-cm",
        "sourceContextId": "diameter-in-cm"
      }
    },

    {
      "comment": "description",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "description",
        "sourceContextId": "single-product-view",
        "separator": " ",
        "css-queries": [
          ".js_prd_moreBox__content",
          ".pdp_description__text-expander",
          ".pdp_description__text-expander p",
          ".pdp_selling-points ul li"
        ]
      }
    },

    {
      "comment": "usk-age",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "minimumAge",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "<span>USK-Freigabe.*?<td>(.*?)<\/td>"
        ]
      }
    },
    {
      "comment": "minimumAge",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "minimumAge",
        "sourceContextId": "minimumAge",
        "defaultValue": 0
      }
    },

    {
      "comment": "multiplayer",
      "commandId": "set-context-value",
      "parameters": {
        "contextId": "multiplayer",
        "value": false
      }
    },
    {
      "comment": "maximum players offline >> multiplayer",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "multiplayer",
        "sourceContextId": "single-product-view",
        "defaultValue": false,
        "setValueOnMatch": true,
        "regex": [
          "Anzahl Spieler \\(offline\\).*?bis zu(.*?)<\\/td>"
        ]
      }
    },
    {
      "comment": "maximum players online >> multiplayer",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "multiplayer",
        "sourceContextId": "single-product-view",
        "setValueOnMatch": true,
        "regex": [
          "Anzahl Spieler \\(online\\).*?(bis zu|Multi)(.*?)<\\/td>"
        ]
      }
    },

    {
      "comment": "genre-subgenre",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "genre-subgenre",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "genre.*?<\\/td><td>(.*?)<\\/td>+?"
        ]
      }
    },

    {
      "comment": "genre",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "genre",
        "sourceContextId": "genre-subgenre",
        "groupIndex": 1,
        "regex": [
          "(.*?)(<br.?\\/>)(.*?)(<br.?\\/>)",
          "(.*?)(-|<br.?\\/>).*?(.*)",
          "(.*)"
        ]
      }
    },
    {
      "comment": "subgenre",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "subgenre",
        "sourceContextId": "genre-subgenre",
        "groupIndex": 3,
        "regex": [
          "(.*?)(<br.?\\/>)(.*?)(<br.?\\/>)",
          "(.*?)(-|<br.?\\/>).*?(.*)"
        ]
      }
    },

    {
      "comment": "publisher",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "publisher",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "<span>Publisher.*?<td>(.*?)<\/td>"
        ]
      }
    },
    {
      "comment": "material",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "material",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          "Material:(.*?)<\/li>",
          ">Material.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "Annual consumption",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "annualConsumptionInKWH",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Jährlicher Energieverbrauch.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "Annual consumption",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "annualConsumptionInKWH",
        "sourceContextId": "annualConsumptionInKWH"
      }
    },
    {
      "comment": "color",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "color",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Farbe Front.*?<td>(.*?)<",
          ">Farbe.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "lock type",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "lock-type",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Verschlussart.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "model",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "model",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Modellbezeichnung.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "minimum energy efficiency class",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "minimumEnergyEfficiencyClass",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Energieeffizienzklasse.*?<td>.*?\\((.*?) bis (.*?)\\)<"
        ]
      }
    },
    {
      "comment": "maximum energy efficiency class",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "maximumEnergyEfficiencyClass",
        "sourceContextId": "single-product-view",
        "groupIndex": 2,
        "regex": [
          ">Energieeffizienzklasse.*?<td>.*?\\((.*?) bis (.*?)\\)<"
        ]
      }
    },
    {
      "comment": "drawer amount",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "drawerAmount",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Anzahl .*?chubladen.*?<td>(.*?)<"
        ]
      }
    },
    {
      "comment": "drawer amount",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "drawerAmount",
        "sourceContextId": "drawerAmount"
      }
    },
    {
      "comment": "height in cm",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "height-in-cm",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Höhe.*?<td>(.*?) cm<"
        ]
      }
    },
    {
      "comment": "height in cm",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "height-in-cm",
        "sourceContextId": "height-in-cm"
      }
    },
    {
      "comment": "width in cm",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "width-in-cm",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Breite.*?<td>(.*?) cm<"
        ]
      }
    },
    {
      "comment": "width in cm",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "width-in-cm",
        "sourceContextId": "width-in-cm"
      }
    },

    {
      "comment": "length in cm",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "length-in-cm",
        "sourceContextId": "single-product-view",
        "groupIndex": 2,
        "regex": [
          ">(Länge|Tiefe).*?<td>(.*?) cm<"
        ]
      }
    },
    {
      "comment": "length in cm",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "length-in-cm",
        "sourceContextId": "length-in-cm"
      }
    },

    {
      "comment": "weight in KG",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "weightInKG",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Gewicht.*?<td>(.*?) kg<"
        ]
      }
    },
    {
      "comment": "weight in KG",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "weightInKG",
        "sourceContextId": "weightInKG"
      }
    },

    {
      "comment": "screensize in inch",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "screensizeInInch",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Bildschirmdiagonale in Zoll.*?<td>(.*?) &#34;<"
        ]
      }
    },
    {
      "comment": "screensize in inch",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "screensizeInInch",
        "sourceContextId": "screensizeInInch"
      }
    },

    {
      "comment": "resolution",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "resolution",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Bildschirmauflösung.*?<td>(.*?)<"
        ]
      }
    },

    {
      "comment": "storage size",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "storageSize",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Speichergröße.*?<td>(.*?)<"
        ]
      }
    },

    {
      "comment": "pump pressure in bar",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "pumpPressureInBar",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Pumpendruck.*?<td>(.*?) bar<"
        ]
      }
    },
    {
      "comment": "pump pressure in bar",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "pumpPressureInBar",
        "sourceContextId": "pumpPressureInBar"
      }
    },

    {
      "comment": "battery life in hours",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "batteryLifeInHours",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": [
          ">Akkulaufzeit.*?<td>(.*?) Std.<"
        ]
      }
    },
    {
      "comment": "battery life in hours",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "batteryLifeInHours",
        "sourceContextId": "batteryLifeInHours"
      }
    },

    {
      "comment": "merchant article number",
      "commandId": "set-context-value",
      "parameters": {
        "contextId": "mean",
        "value": "otto.{request.query.itemId}"
      }
    },
    {
      "comment": "gtin",
      "commandId": "get-value-by-regex",
      "parameters": {
        "contextId": "gtin",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "regex": "gtin13\": \"(.*?)\""
      }
    },
    {
      "comment": "gtins",
      "commandId": "set-context-value",
      "parameters": {
        "contextId": "gtins",
        "value": "{gtin}"
      }
    },
    {
      "comment": "images-big",
      "commandId": "get-values-by-regex",
      "parameters": {
        "contextId": "images-big",
        "sourceContextId": "single-product-view",
        "groupIndex": 1,
        "replacements": {
          "$": "?",
          "\\?.*": "?h=450&w=450&sm=clamp&upscale=true&fmt=auto"
        },
        "regex": [ "data-image-src=\"(https.*?)\"" ]
      }
    },
    {
      "comment": "add small versions of images-big",
      "commandId": "clone-items-and-modify-clones",
      "parameters": {
        "contextId": "images-small",
        "sourceContextId": "images-big",
        "replacements": {
          "$": "?",
          "\\?.*": "?h=150&w=150&sm=clamp&upscale=true&fmt=auto"
        }
      }
    },
    {
      "comment": "title-image",
      "commandId": "get-value-from-array",
      "parameters": {
        "contextId": "title-image",
        "sourceContextId": "images-big"
      }
    },

    {
      "comment": "number of ratings",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "numberOfRatings",
        "sourceContextId": "single-product-view",
        "css-queries": [ "span[data-target='allreviewscount']" ]
      }
    },
    {
      "comment": "number of ratings",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "numberOfRatings",
        "defaultValue": 0,
        "sourceContextId": "numberOfRatings"
      }
    },

    {
      "comment": "rating",
      "commandId": "get-value-by-css-queries",
      "parameters": {
        "contextId": "ratingInPercent",
        "sourceContextId": "single-product-view",
        "css-queries": [ ".cr_ratingContainer h1" ]
      }
    },
    {
      "comment": "rating",
      "commandId": "get-float-from-value",
      "parameters": {
        "contextId": "ratingInPercent",
        "defaultValue": 0,
        "sourceContextId": "ratingInPercent"
      }
    },
    {
      "comment": "rating",
      "commandId": "get-rule-of-three-value",
      "parameters": {
        "maximumValue": 5,
        "contextId": "ratingInPercent"
      }
    },

    {
      "comment": "teaser texts",
      "commandId": "get-values-by-css-queries",
      "parameters": {
        "contextId": "teaser-texts",
        "sourceContextId": "single-product-view",
        "css-queries": [ ".pdp_selling-points ul li" ]
      }
    },

    {
      "comment": "observe scraped information",
      "commandId": "observe-information",
      "parameters": {
        "informationIds": [
          "navigation-path",
          "gtins",
          "site"
        ]
      }
    },

    {
      "comment": "seoKeywords",
      "commandId": "extract-seo-keywords",
      "parameters": {
        "contextId": "seoKeywords",
        "sourceContextId": ["description", "title"]
      }
    },

    {
      "comment": "store scraped information",
      "commandId": "store-information",
      "parameters": {
        "informationIds": [
          "annualConsumptionInKWH",
          "batteryLifeInHours",
          "color",
          "description",
          "diameter-in-cm",
          "drawerAmount",
          "gtin",
          "height-in-cm",
          "images-big",
          "images-small",
          "genre",
          "length-in-cm",
          "lock-type",
          "link",
          "material",
          "maximumEnergyEfficiencyClass",
          "mean",
          "minimumAge",
          "minimumEnergyEfficiencyClass",
          "model",
          "multiplayer",
          "numberOfRatings",
          "price-current",
          "price-initial",
          "publisher",
          "pumpPressureInBar",
          "ratingInPercent",
          "resolution",
          "screensizeInInch",
          "seoKeywords",
          "storageSize",
          "subgenre",
          "teaser-texts",
          "title",
          "title-image",
          "weightInKG",
          "weightInG",
          "width-in-cm",
          "width-in-mm"
        ]
      }
    }
  ]
}
